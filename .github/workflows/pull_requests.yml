name: PRChecks
on: [pull_request]

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: curl -sSL https://install.python-poetry.org | python3 - --version=1.5.0

      - uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: 'poetry'

      - name: Install dependencies
        run: poetry -vv install --no-interaction --no-ansi

      - name: Run linting
        run: poetry run pylint --load-plugins=dslinter src tests

  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: curl -sSL https://install.python-poetry.org | python3 - --version=1.5.0

      - uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: 'poetry'

      - name: Install dependencies
        run: poetry -vv install --no-interaction --no-ansi

      - name: Add current directory to PYTHONPATH
        run: |
          echo "PYTHONPATH=$PWD" >> "$GITHUB_ENV"

      - name: Restore DVC cache
        uses: actions/cache/restore@v3
        id: restore-cache
        with:
          path: ./.dvc/cache
          key: cache-${{ hashFiles('dvc.lock') }}

      - name: Download stopwords from NLTK
        run: poetry run python -c "import nltk; nltk.download('stopwords')"

      - name: Run DVC pipeline
        run: poetry run dvc repro

      - uses: actions/upload-artifact@v3
        with:
          name: remote-data
          path: ./data

      - name: Cache DVC pipeline
        uses: actions/cache@v3
        with:
          path: ./.dvc/cache  # Adjust the path to your DVC cache directory
          key: ${{ runner.os }}-dvc-${{ hashFiles('dvc.lock') }}

      - name: Pull Docker image for tests
        run: docker pull ghcr.io/remla23-team06/model-service:latest

      - name: Run Docker container
        run: |
          docker run -d --name test-model-service -p 8000:8000 ghcr.io/remla23-team06/model-service:latest
          sleep 1m

      - name: Wait for container to start
        run: |
            until nc -zv localhost 8000; do
              echo "Container not yet started..."
              sleep 5
            done

      - name: Set up environment variable for the model service
        run: echo "MODEL_SERVICE_URL=http://localhost:8000" >> $GITHUB_ENV

      - name: Run tests with coverage
        run: poetry run pytest --junitxml=./tests-report.xml --cov=./tests/ --cov-report=xml:./coverage.xml

      - name: Upload coverage data to Coveralls
          run: coveralls
          env:
            COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

      - uses: actions/upload-artifact@v3
        with:
          name: junit-test-report
          path: ./tests-report.xml

      - uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./coverage.xml


  mllint:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: remote-data

      - uses: actions/download-artifact@v3
        with:
          name: junit-test-report

      - uses: actions/download-artifact@v3
        with:
          name: coverage-report

      - name: Install poetry
        run: curl -sSL https://install.python-poetry.org | python3 - --version=1.5.0

      - uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: 'poetry'

      - name: Install dependencies
        run: poetry -vv install --no-interaction --no-ansi

      - name: Run linting
        run: poetry run mllint --output ./report.md

      - uses: actions/upload-artifact@v3
        with:
          name: mllint-report
          path: ./report.md


  create_pr_comment:
    needs: mllint
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: mllint-report
      - uses: mshick/add-pr-comment@v2
        with:
          message-path: |
            ./report.md
